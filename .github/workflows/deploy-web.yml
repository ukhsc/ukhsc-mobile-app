name: Deploy Web

on:
  push:
    branches:
      - main
    paths:
      - 'lib/**'
      - 'web/**'
      - 'assets/**'
      - '.github/workflows/deploy-web.yml'
      - 'pubspec.yaml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Web
    permissions:
      contents: read
      deployments: write

    steps:
      - name: Create GitHub Deployment
        uses: actions/github-script@v7
        id: deployment
        with:
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'web-production',
              auto_merge: false,
              required_contexts: []
            });
            console.log('Created deployment:', deployment.data.id);
            return deployment.data.id;

      - name: Set Deployment Status to In Progress
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: ${{ steps.deployment.outputs.result }},
              state: 'in_progress',
              description: 'Deployment in progress...',
              log_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            });

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version-file: pubspec.yaml
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Generate files
        run: |
          echo "$ENV_FILE_CONTENTS" > .env
          dart run build_runner build --delete-conflicting-outputs
        env:
          ENV_FILE_CONTENTS: ${{ secrets.ENV_FILE_CONTENTS }}

      - name: Generate version
        id: version
        run: |
          echo "BUILD_ID=$(date +%Y%m%d)-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build Web
        run: |
          flutter build web --release

          cd build/web
          for file in *.js; do
            if [ -f "$file" ]; then
              mv "$file" "${file%.*}.v${{ steps.version.outputs.BUILD_ID }}.js"
              find . -type f -name "*.html" -exec sed -i "s|$file|${file%.*}.v${{ steps.version.outputs.BUILD_ID }}.js|g" {} +
              find . -type f -name "*.js" -exec sed -i "s|$file|${file%.*}.v${{ steps.version.outputs.BUILD_ID }}.js|g" {} +
            fi
          done

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3.13.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          command: pages deploy --project-name=ukhsc-mobile-web build/web

      - name: Upload Source Maps
        run: |
          flutter build web --source-maps
          dart run sentry_dart_plugin
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

      - name: Update Deployment Status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const deployment_id = ${{ steps.deployment.outputs.result }};
            const success = '${{ job.status }}' === 'success';

            try {
              const status = {
                owner,
                repo,
                deployment_id,
                state: success ? 'success' : 'failure',
                description: success ? 'Deployment succeeded!' : 'Deployment failed',
                log_url: `https://github.com/${owner}/${repo}/actions/runs/${context.runId}`,
                environment_url: success ? 'https://web.ukhsc.org' : undefined,
                auto_inactive: success
              };

              console.log('Updating deployment status:', status);
              await github.rest.repos.createDeploymentStatus(status);

              if (!success) {
                core.setFailed('Deployment failed');
              }
            } catch (error) {
              console.error('Error updating deployment status:', error);
              core.setFailed(error.message);
            }

      - name: Generate ISO Timestamp
        id: timestamp
        run: |
          echo "ISO_TIME=$(date -u -d @${{ github.event.repository.pushed_at }} +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Send Discord Notification
        uses: tsickert/discord-webhook@v6.0.0
        if: always()
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          embed-title: 📱 UKHSC 系統前端部署通知
          embed-description: |
            ### 部署狀態：${{ job.status == 'success' && '✅ 成功' || '❌ 失敗' }}

            **平台：** Web (Progressive Web App)
            **分支：** `${{ github.ref_name }}`
            **提交者：** ${{ github.actor }}
            **提交訊息：** ${{ github.event.head_commit.message }}
            **部署環境：** Cloudflare Pages Production
            **部署時間：** <t:${{ github.event.repository.pushed_at }}:F>
            **版本：** `${{ steps.version.outputs.BUILD_ID }}`

            [查看部署詳細資訊](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            ${{
              job.status == 'success' && '[開啟 PWA](https://web.ukhsc.org)' || ''
            }}
          embed-color: ${{ job.status == 'success' && '65280' || '16711680' }}
          embed-footer-text: "UKHSC System Frontend Deployment"
          embed-timestamp: ${{ steps.timestamp.outputs.ISO_TIME }}
